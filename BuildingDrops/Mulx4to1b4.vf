////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Mulx4to1b4.vf
// /___/   /\     Timestamp : 11/11/2020 17:37:11
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family kintex7 -verilog G:/ise_project/Mux4to1b4_sch/Mulx4to1b4.vf -w G:/ise_project/Mux4to1b4_sch/Mulx4to1b4.sch
//Design Name: Mulx4to1b4
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module Mulx4to1b4(I0, 
                  I1, 
                  I2, 
                  I3, 
                  s, 
                  o);

    input [3:0] I0;
    input [3:0] I1;
    input [3:0] I2;
    input [3:0] I3;
    input [1:0] s;
   output [3:0] o;
   
   wire XLXN_6;
   wire XLXN_9;
   wire XLXN_13;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_23;
   wire XLXN_26;
   wire XLXN_30;
   wire XLXN_70;
   wire XLXN_71;
   wire XLXN_72;
   wire XLXN_73;
   wire XLXN_74;
   wire XLXN_75;
   wire XLXN_76;
   wire XLXN_77;
   wire XLXN_79;
   wire XLXN_80;
   wire XLXN_81;
   wire XLXN_82;
   
   INV  XLXI_1 (.I(s[0]), 
               .O(XLXN_6));
   INV  XLXI_2 (.I(s[1]), 
               .O(XLXN_9));
   AND2  XLXI_3 (.I0(XLXN_9), 
                .I1(XLXN_6), 
                .O(XLXN_13));
   AND2  XLXI_4 (.I0(XLXN_9), 
                .I1(s[0]), 
                .O(XLXN_23));
   AND2  XLXI_5 (.I0(s[1]), 
                .I1(XLXN_6), 
                .O(XLXN_26));
   AND2  XLXI_6 (.I0(s[1]), 
                .I1(s[0]), 
                .O(XLXN_30));
   AND2  XLXI_8 (.I0(I0[0]), 
                .I1(XLXN_13), 
                .O(XLXN_17));
   AND2  XLXI_9 (.I0(I1[0]), 
                .I1(XLXN_23), 
                .O(XLXN_18));
   AND2  XLXI_10 (.I0(I2[0]), 
                 .I1(XLXN_26), 
                 .O(XLXN_19));
   AND2  XLXI_11 (.I0(I3[0]), 
                 .I1(XLXN_30), 
                 .O(XLXN_20));
   OR4  XLXI_12 (.I0(XLXN_20), 
                .I1(XLXN_19), 
                .I2(XLXN_18), 
                .I3(XLXN_17), 
                .O(o[0]));
   AND2  XLXI_13 (.I0(I0[1]), 
                 .I1(XLXN_13), 
                 .O(XLXN_70));
   AND2  XLXI_14 (.I0(I1[1]), 
                 .I1(XLXN_23), 
                 .O(XLXN_71));
   AND2  XLXI_15 (.I0(I2[1]), 
                 .I1(XLXN_26), 
                 .O(XLXN_72));
   AND2  XLXI_16 (.I0(I3[1]), 
                 .I1(XLXN_30), 
                 .O(XLXN_73));
   AND2  XLXI_17 (.I0(I0[2]), 
                 .I1(XLXN_13), 
                 .O(XLXN_74));
   AND2  XLXI_18 (.I0(I1[2]), 
                 .I1(XLXN_23), 
                 .O(XLXN_75));
   AND2  XLXI_19 (.I0(I2[2]), 
                 .I1(XLXN_26), 
                 .O(XLXN_76));
   AND2  XLXI_20 (.I0(I3[2]), 
                 .I1(XLXN_30), 
                 .O(XLXN_77));
   AND2  XLXI_21 (.I0(I0[3]), 
                 .I1(XLXN_13), 
                 .O(XLXN_79));
   AND2  XLXI_22 (.I0(I1[3]), 
                 .I1(XLXN_23), 
                 .O(XLXN_80));
   AND2  XLXI_23 (.I0(I2[3]), 
                 .I1(XLXN_26), 
                 .O(XLXN_81));
   AND2  XLXI_24 (.I0(I3[3]), 
                 .I1(XLXN_30), 
                 .O(XLXN_82));
   OR4  XLXI_25 (.I0(XLXN_73), 
                .I1(XLXN_72), 
                .I2(XLXN_71), 
                .I3(XLXN_70), 
                .O(o[1]));
   OR4  XLXI_26 (.I0(XLXN_77), 
                .I1(XLXN_76), 
                .I2(XLXN_75), 
                .I3(XLXN_74), 
                .O(o[2]));
   OR4  XLXI_27 (.I0(XLXN_82), 
                .I1(XLXN_81), 
                .I2(XLXN_80), 
                .I3(XLXN_79), 
                .O(o[3]));
endmodule
